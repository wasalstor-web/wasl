#!/bin/bash

# Gemma.cpp Build and Test Script - ุณูุฑูุจุช ุจูุงุก ูุงุฎุชุจุงุฑ Gemma.cpp
# ุชุฃูุฏ ูู ูุฌูุฏ ูุชุทูุจุงุช ุงูุจูุงุก ูุจู ุชุดุบูู ูุฐุง ุงูุณูุฑูุจุช

set -e  # Exit on error

echo "๐ ุจุฏุก ุนูููุฉ ุจูุงุก Gemma.cpp..."
echo "Starting Gemma.cpp build process..."

# ุงูุชุญูู ูู ูุฌูุฏ ุงููุฌูุฏ
if [ ! -d "gemma-cpp" ]; then
    echo "โ ูุฌูุฏ gemma-cpp ุบูุฑ ููุฌูุฏ!"
    echo "โ gemma-cpp directory not found!"
    exit 1
fi

cd gemma-cpp

echo "๐ ุงูุงูุชูุงู ุฅูู ูุฌูุฏ gemma-cpp..."
echo "๐ Entering gemma-cpp directory..."

# ุงูุชุญูู ูู ูุชุทูุจุงุช ุงูุจูุงุก
echo "๐ ุงูุชุญูู ูู ูุชุทูุจุงุช ุงูุจูุงุก..."
echo "๐ Checking build requirements..."

# Check for CMake
if ! command -v cmake &> /dev/null; then
    echo "โ CMake ุบูุฑ ูุซุจุช. ูุฑุฌู ุชุซุจูุช CMake ุฃููุงู."
    echo "โ CMake not found. Please install CMake first."
    exit 1
fi

# Check for C++ compiler
if ! command -v clang++ &> /dev/null && ! command -v g++ &> /dev/null; then
    echo "โ ูุชุฑุฌู C++ ุบูุฑ ููุฌูุฏ. ูุฑุฌู ุชุซุจูุช clang++ ุฃู g++."
    echo "โ C++ compiler not found. Please install clang++ or g++."
    exit 1
fi

echo "โ ูุชุทูุจุงุช ุงูุจูุงุก ูุชููุฑุฉ."
echo "โ Build requirements satisfied."

# ุฅูุดุงุก ูุฌูุฏ ุงูุจูุงุก
echo "๐ ุฅูุดุงุก ูุฌูุฏ ุงูุจูุงุก..."
echo "๐ Creating build directory..."

if [ -d "build" ]; then
    echo "๐งน ุชูุธูู ูุฌูุฏ ุงูุจูุงุก ุงูููุฌูุฏ..."
    echo "๐งน Cleaning existing build directory..."
    rm -rf build/*
fi

mkdir -p build

# ุชูููู CMake
echo "โ๏ธ  ุชูููู ุงููุดุฑูุน ุจุงุณุชุฎุฏุงู CMake..."
echo "โ๏ธ  Configuring project with CMake..."

cmake -B build -DCMAKE_BUILD_TYPE=Release

# ุงูุจูุงุก
echo "๐จ ุจูุงุก ุงููุดุฑูุน..."
echo "๐จ Building project..."

cd build
make -j$(nproc) 2>&1 | tee build.log

# ุงูุชุญูู ูู ูุฌุงุญ ุงูุจูุงุก
if [ $? -eq 0 ]; then
    echo ""
    echo "๐ ุชู ุจูุงุก Gemma.cpp ุจูุฌุงุญ!"
    echo "๐ Gemma.cpp built successfully!"
    echo ""
    echo "๐ ุงููููุงุช ุงููููุดุฃุฉ:"
    echo "๐ Generated files:"
    ls -la gemma* 2>/dev/null || echo "ูุง ุชูุฌุฏ ูููุงุช gemma* ูู ูุฌูุฏ ุงูุจูุงุก"
    echo ""
    echo "๐ ููุงุณุชุฎุฏุงู:"
    echo "๐ To use:"
    echo "   1. ุงุญุตู ุนูู ููุงุฐุฌ Gemma ูู Kaggle"
    echo "   1. Get Gemma models from Kaggle"
    echo "   2. ./gemma --tokenizer tokenizer.spm --weights model.sbs"
    echo ""
    echo "๐ ุงูุฑุฃ README_ARABIC.md ููุชุนูููุงุช ุงูุชูุตูููุฉ"
    echo "๐ Read README_ARABIC.md for detailed instructions"
else
    echo ""
    echo "โ ูุดู ูู ุจูุงุก ุงููุดุฑูุน. ุฑุงุฌุน build.log ููุชูุงุตูู."
    echo "โ Build failed. Check build.log for details."
    echo ""
    echo "๐ ุขุฎุฑ 20 ุณุทุฑ ูู ุณุฌู ุงูุจูุงุก:"
    echo "๐ Last 20 lines from build log:"
    tail -20 build.log
    exit 1
fi